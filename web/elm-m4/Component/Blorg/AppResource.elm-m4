--changequote(<!,!>)
--include(<!elm-macros.elm-m4!>)
module Component.Blorg.AppResource
  exposing
    ( Model, init, toRoute
    , Msg(GoTo), Event, update
    , view)

import Component.Blorg.NotFoundPage as NotFoundPage

import Component.Blorg.ArticlePage as ArticlePage
import Component.Blorg.ArticleListPage as ArticleListPage

import Type.Blorg.Article as Article

import Type.Blorg.AppRoute as AppRoute
  exposing
    ( AppRoute(NotInitialized, NotFound, Home, ArticleList,Article)
    )

import Type.Blorg.Event exposing(..)
import Type.Blorg.Config as Config
import Type.Blorg.Page as Page

IMPORT_HTML
IMPORT_MATERIAL
-- 
-- Sub Components

define(<!SUB_NotFoundPage!>,
  <!<!NotFoundPage!>, <!NotFoundPage!>, <!notFoundPage!>!>)
SUB_ON_DEMAND_GET_SET(SUB_NotFoundPage)

define(<!SUB_ArticlePage!>,
  <!<!ArticlePage!>, <!ArticlePage!>, <!articlePage!>!>)
SUB_ON_DEMAND_GET_SET(SUB_ArticlePage)

define(<!SUB_ArticleListPage!>,
  <!<!ArticleListPage!>, <!ArticleListPage!>, <!articleListPage!>!>)
SUB_ON_DEMAND_GET_SET(SUB_ArticleListPage)

-- MODEL

type alias Model
  = { route : AppRoute
    , onDemand: OnDemand
    , mdl : Material.Model
      -- Boilerplate: model store for any and all Mdl components you use.
    }

type OnDemand
  = NoPage
  | NotFoundPageModel NotFoundPage.Model
  | ArticlePageModel ArticlePage.Model
  | ArticleListPageModel ArticleListPage.Model

init : (Model, Cmd Msg)
init =
  let
    (notFoundPage, notFoundCmd) = NotFoundPage.init
  in
    ( { route = AppRoute.NotInitialized
      , onDemand = NoPage
      , mdl = Material.model
      }
    , Cmd.none
    )

toRoute : Model -> AppRoute
toRoute model =
  model.route
-- ACTION, UPDATE

type Msg
  = Mdl (Material.Msg Msg)
  -- Boilerplate: Msg clause for internal Mdl messages.
  | GoTo AppRoute
  | NotFoundPage NotFoundPage.Msg
  | ArticlePage ArticlePage.Msg
  | ArticleListPage ArticleListPage.Msg

type alias Event
  = ()

update : Msg -> Model -> (Model, Cmd Msg, Maybe Event)
update msg model =
  case msg of
    Mdl act ->
      withEvent <| Material.update act model
    SUB_UPDATE_MSG(SUB_NotFoundPage)
    SUB_UPDATE_MSG(SUB_ArticlePage)
    SUB_UPDATE_MSG(SUB_ArticleListPage)
    GoTo route ->
      gotoRoute route model

gotoRoute : AppRoute -> Model -> (Model, Cmd Msg, Maybe Event)
gotoRoute route model =
  let
    _ = Debug.log "gotoRoute " <| toString route
  in
    case route of
      AppRoute.NotInitialized -> (model, Cmd.none, Nothing)
      AppRoute.Home -> (model, Cmd.none, Nothing) -- Redirected. Never comes
      AppRoute.NotFound ->
        SUB_ASSIGN_ON_DEMAND(SUB_NotFoundPage, route)
      AppRoute.Article id ->
        SUB_ASSIGN_ON_DEMAND(SUB_ArticlePage, route, id)
      AppRoute.ArticleList ->
        SUB_ASSIGN_ON_DEMAND(SUB_ArticleListPage, route)
--       _ ->
--         let
--             _ = Debug.log "AppResource unknown route " route
--         in
--           (model, Cmd.none, Nothing)

SUB_UPDATE_WITH_EVENT(SUB_NotFoundPage)
updateOnEventFrom_NotFoundPage :
  NotFoundPage.Event -> Model -> ( Model, Cmd Msg, Maybe Event )
updateOnEventFrom_NotFoundPage event model =
  (model, Cmd.none, Nothing)

SUB_UPDATE_WITH_EVENT(SUB_ArticlePage)
updateOnEventFrom_ArticlePage :
  ArticlePage.Event -> Model -> ( Model, Cmd Msg, Maybe Event )
updateOnEventFrom_ArticlePage event model =
  (model, Cmd.none, Nothing)
SUB_UPDATE_WITH_EVENT(SUB_ArticleListPage)
updateOnEventFrom_ArticleListPage :
  ArticleListPage.Event -> Model -> ( Model, Cmd Msg, Maybe Event )
updateOnEventFrom_ArticleListPage event model =
  case event of
    ArticleListPage.GoToArticle article ->
      gotoRoute (Article.toRoute article) model

-- VIEW

view : Model -> Html Msg
view model =
  Page.layout Mdl model.mdl [ viewRoute model ]

viewRoute : Model -> Html Msg
viewRoute model =
  case model.route of
    AppRoute.NotInitialized ->
      text "NotInitialized"
    AppRoute.Home ->
      text "Why Home?"
    AppRoute.NotFound ->
      SUB_VIEW(SUB_NotFoundPage)
    (AppRoute.Article _) ->
      SUB_VIEW(SUB_ArticlePage)
    AppRoute.ArticleList ->
      SUB_VIEW(SUB_ArticleListPage)

--     _ ->
--       text <| "Unhandled Route" ++ toString model.route
