--changequote(<!,!>)
--include(<!RelmMacros.e4!>)
module Blorg.Component.ArticleListView
  exposing
    ( State, init, initialState
    , Action
    , Event(GoToArticle)
    , update, view)

import Blorg.Schema.Article exposing(..)

import RELM.Lib.DecoderExts exposing(..)
import RELM.Lib.Event exposing(..)
import Blorg.Layout.Page as Page

IMPORT_HTML
import Exts.Html exposing(..)
IMPORT_MATERIAL
import Material.Color as Color

import Html.Events
import String

-- STATE

type alias State =
  { articleList : ArticleList
  , mdl : Material.Model
      -- Boilerplate: model store for any and all Mdl components you use.
  }

init : ArticleList -> (State, Cmd Action)
init articleList =
  ( initialState articleList
  , Cmd.none
  )

initialState : ArticleList -> State
initialState articleList =
    State articleList Material.model


-- ACTION, UPDATE

type Action
  = ClickArticle Article
    | Mdl (Material.Msg Action)
    -- Boilerplate: Action clause for internal Mdl messages.

type Event 
  = GoToArticle Article

update : Action -> State -> (State, Cmd Action, Maybe Event)
update action state =
  case action of
    ClickArticle article ->
      let
        _ = Debug.log "ClickArticle" article
      in
        ( state, Cmd.none, Just (GoToArticle article))
    -- Boilerplate: Mdl action handler.
    Mdl action_ ->
      withEvent <| Material.update Mdl action_ state

-- VIEW

type alias Mdl =
  Material.Model

view : State -> Html Action
view state =
  div [ ]
  [ Lists.ul []
      (List.indexedMap (viewItem state.mdl) state.articleList)
  , Button.render Mdl [MDL_IDX] state.mdl
    [ Button.fab
    , Button.colored
    , Button.disabled
    , css "position" "absolute"
    , css "bottom" "1em"
    , css "right" "1em"
    ]
    [ Icon.i "add"]  
  ]
    
viewItem mdl index item =
  Lists.li
  [ ]
  [ Lists.content 
--     [ Options.attribute <| Html.Events.onClick (ClickArticle item) ] 
--     [ text item.title ] 
    [  ] 
    [ Button.render Mdl [index, MDL_IDX] mdl
      [ Options.onClick (ClickArticle item)
      ]
      [  text item.title ]
    ] 
  ]
  
        
